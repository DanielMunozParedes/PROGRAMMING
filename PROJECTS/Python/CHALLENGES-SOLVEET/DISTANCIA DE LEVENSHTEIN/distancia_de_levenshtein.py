# -*- coding: utf-8 -*-
"""DISTANCIA DE LEVENSHTEIN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nwc7UE3DdbCs_BUXc73bGhgx2lnpIMGx

PURPOSED BY "nRikke

Se llama Distancia de Levenshtein, distancia de edición, o distancia entre palabras, 
al número mínimo de operaciones requeridas para transformar una cadena de caracteres en otra.
 Se entiende por operación, bien una inserción, eliminación o la sustitución de un carácter. 
 Esta distancia recibe ese nombre en honor al científico ruso Vladimir Levenshtein, quien se ocupara de esta distancia en 1965. 
 Es útil en programas que determinan cuán similares son dos cadenas de caracteres, como es el caso de los correctores de ortografía.

Por ejemplo:
'casa' y 'cosa' difieren en 1.
'caza' y 'cazar' difieren en 1.
'cazador' y 'cazar' difieren en 2.
'potable' y 'portable' difieren en 1.
"""

str1 = "caza"
str2 = "cazar"
distancia = 0

if len(str1) > len(str2):

  distancia = len(str1) - len(str2)
elif len(str1) < len(str2):  

  distancia =  len(str2) - len(str1) 

elif len(str1) == len(str2):
 
  liststr1 = [i for i in iter(str1)];
  liststr2 = [i for i in iter(str2)]

  for i,v in enumerate(liststr2):
    for j,k in enumerate(liststr1):
      print(j)
      if i == j:
        print("pos en i " , i , " pos en j ", j)
        if(v != k):
          
          distancia = distancia + 1
    

print("Distancia de Levenshtein para: ", str1, " y ", str2, " es: " ,  distancia)